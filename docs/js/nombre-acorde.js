
import { cromaSos, cromaBem, notasACifrado } from './config.js'; import { analizarAcorde } from './logic.js'; import { mostrarResultado, mostrarError, actualizarBoton } from './ui.js'; export function obtenerNotasSeleccionadas() { return { tonica: document.getElementById("notaUno").value, mediante: document.getElementById("notaDos").value, dominante: document.getElementById("notaTres").value }; } export function obtenerNotasComoArray() { const usarSeptima = document.getElementById("usarSeptima").checked; const tonica = document.getElementById("notaUno").value; const tercera = document.getElementById("notaDos").value; const quinta = document.getElementById("notaTres").value; const septima = usarSeptima ? document.getElementById("notaCuatro").value : null; const notas = [tonica, tercera, quinta]; if (usarSeptima && septima) { notas.push(septima); } const algunaVacia = notas.some(n => !n); const hayRepetidas = new Set(notas).size < notas.length; return (!algunaVacia && !hayRepetidas) ? notas : []; } export function verificarNotasValidas() { const usarSeptima = document.getElementById("usarSeptima").checked; const { tonica, mediante, dominante } = obtenerNotasSeleccionadas(); const septima = usarSeptima ? document.getElementById("notaCuatro").value : null; const notas = [tonica, mediante, dominante]; if (usarSeptima) notas.push(septima); const algunaVacia = notas.some(n => !n); const hayRepetidas = new Set(notas).size < notas.length; const invalido = algunaVacia || hayRepetidas; actualizarBoton(invalido); if (algunaVacia) { mostrarError("Debes seleccionar tres notas distintas para detectar el acorde."); } else if (hayRepetidas) { mostrarError("Las notas seleccionadas deben ser distintas."); } else { mostrarError(""); } const botonReproducir = document.getElementById("reproducirNotas"); botonReproducir.disabled = invalido; } export function actualizarOpciones() { const usarBemoles = document.getElementById("usarBemoles").checked; const notas = usarBemoles ? cromaBem : cromaSos; const usarSeptima = document.getElementById("usarSeptima").checked; const ids = ["notaUno", "notaDos", "notaTres"]; if (usarSeptima) ids.push("notaCuatro"); document.getElementById("campoSeptima").style.display = usarSeptima ? "block" : "none"; const seleccionadas = Object.values(obtenerNotasSeleccionadas()); ids.forEach(id => { const select = document.getElementById(id); const actual = select.value; select.innerHTML = ""; notas.forEach(nota => { if (!seleccionadas.includes(nota) || nota === actual) { const option = document.createElement("option"); option.value = nota; option.textContent = nota; if (nota === actual) option.selected = true; select.appendChild(option); if (!actual && !select.value && optionIndex === 0) { select.value = nota; } } }); }); verificarNotasValidas(); } export function detectarAcorde() { const { tonica, mediante, dominante } = obtenerNotasSeleccionadas(); const usarBemoles = document.getElementById("usarBemoles").checked; const usarSeptima = document.getElementById("usarSeptima").checked; const septima = usarSeptima ? document.getElementById("notaCuatro").value : null; const resultado = analizarAcorde(tonica, mediante, dominante, usarBemoles, septima); if (!resultado) { mostrarError("La combinaci贸n ingresada no forma un acorde en su inversi贸n fundamental."); mostrarResultado("Acorde no reconocido", "Acorde no reconocido"); return; } const { tipoLatina, tipoAmericana, tonicaAmericana } = resultado; if (tipoLatina === "desconocido" || tipoAmericana === "?") { mostrarError("La combinaci贸n ingresada no forma un acorde en su inversi贸n fundamental."); mostrarResultado("Acorde no reconocido", "Acorde no reconocido"); return; } const nombreLatino = `${tonica} ${tipoLatina}`; const nombreAmericano = `${tonicaAmericana}${tipoAmericana}`; mostrarError(""); mostrarResultado(nombreLatino, nombreAmericano); }